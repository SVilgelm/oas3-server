name: Tests
on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
    branches:
      - master
      - v*
jobs:
  style:
    strategy:
      matrix:
        go-version: [1.13.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Run gofmt
        run: diff -u <(echo -n) <(gofmt -d -s .)
      - name: Run go vet
        run: go vet ./...
      - name: Install golint
        run: go get -u golang.org/x/lint/golint
      - name: Run golint
        run: ~/go/bin/golint -set_exit_status ./...
      - name: Install misspell
        run: go get -u github.com/client9/misspell/cmd/misspell
      - name: Run misspell
        run: ~/go/bin/misspell -error $(find . -name "*.go")
  unit-tests:
    strategy:
      matrix:
        go-version: [1.13.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Run
        run: go test -cover -race -coverprofile=coverage.txt -covermode=atomic ./...
      - name: Upload coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.txt
          flags: unittests
          name: codecov-umbrella
          yml: ./codecov.yml
  sonarqube:
    strategy:
      matrix:
        go-version: [1.13.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Download Sonar Scanner Client
        run: curl -L https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.2.0.1873-linux.zip -o sonar.zip
      - name: Unzip
        run: unzip sonar.zip && mv sonar-scanner* sonar && rm sonar.zip
      - name: Run
        run: sonar/bin/sonar-scanner -Dsonar.pullrequest.key=$(echo ${GITHUB_REF} | awk '{split($0,a,"/"); print a[3]}') -Dsonar.projectKey=SVilgelm_oas3-server -Dsonar.organization=svilgelm -Dsonar.sources=. -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_LOGIN }}
