name: Tests
on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
    branches:
      - master
      - v*
jobs:
  tests:
    strategy:
      matrix:
        go-version: [1.13.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v1
      - name: gofmt
        run: diff -u <(echo -n) <(gofmt -d -s .)
      - name: go vet
        run: go vet ./...
      - name: misspell
        run: |
          go get -u github.com/client9/misspell/cmd/misspell
          ~/go/bin/misspell -error $(find . -name "*.go")
      - name: golint
        run: |
          go get -u golang.org/x/lint/golint
          ~/go/bin/golint -set_exit_status ./...
      - name: unittests
        run: go test -race ./...
  sonar:
    needs: tests
    env:
      SONAR_VERSION: 4.2.0.1873
    strategy:
      matrix:
        go-version: [1.13.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v1
      - name: go vet
        run: go vet ./... > vet-report.out
      - name: golint
        run: |
          go get -u golang.org/x/lint/golint
          ~/go/bin/golint ./... > lint-report.out
      - name: unittests
        run: go test -cover -coverprofile=coverage.out -covermode=atomic -json ./... > test-report.out
      - name: Cache Sonar Scanner Client
        id: cache-sonar
        uses: actions/cache@v1
        with:
          path: sonar
          key: ${{ runner.os }}-sonar-${SONAR_VERSION}
      - name: Install Sonar Scanner Client
        if: steps.cache-sonar.outputs.cache-hit != 'true'
        run: |
          curl -L https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SONAR_VERSION}-linux.zip -o sonar.zip
          unzip sonar.zip
          mv sonar-scanner* sonar
          rm sonar.zip
      - name: Run sonarqube
        run: sonar/bin/sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_LOGIN }}
